@model BoardDecisions
@{
    Layout = $"~/Areas/Admin/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Yönetim Kararı";
}

<section class="shopping-cart">
    <div class="container">
        <div class="row">
            <form action="/Admin/BoardDecisions/EditOrInsert" method="post" class="wpcf7-form form-horizontal">
                <div class="col-md-8">
                    <fieldset>
                        <legend>@ViewData["Title"]</legend>
                        <input type="hidden" asp-for="Id" />
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="textinput">Tarih</label>
                            <div class="col-md-8">
                                <input asp-for="Date" class="form-control input-md" asp-format="{0:yyyy'-'MM'-'dd}" type="date" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label" for="passwordinput">Tarih Sıra No</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.DateOrderNo, new { @class = "form-control input-md" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="passwordinput">Sıra No</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.Number, new { @class = "form-control input-md" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="passwordinput">Başlık</label>
                            <div class="col-md-8">
                                @Html.TextBoxFor(x => x.Title, new { @class = "form-control input-md" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="passwordinput">Detay</label>
                            <div class="col-md-8">
                                <quill-editor asp-for="Body" style="height: 400px;"></quill-editor>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label" for=""></label>
                            <div class="col-md-8">
                                <button class="btn btn-success">Kaydet</button>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-md-4" id="image-form">
                    <input type="hidden" name="FileList" id="FileList" value="" v-model="jsonData" asp-for="FileList" />

                    <h2> Genel Dosyalar</h2>

                    <div v-for="item in model">
                        <div>
                            <img v-bind:src="item.fileName" height="150" />
                        </div>
                        <div>
                            {{item.title}}
                            <a href="jvascript:;" v-if="!item.isDeleted" v-on:click="isDeleted(item)">Delete</a>
                            <a href="jvascript:;" v-if="item.isDeleted" v-on:click="isNotDeleted(item)">Delete(cancel)</a>
                        </div>
                    </div>
                    <div>
                        <input type="file" id="file" name="file" />
                        <input type="text" id="txtfileTitle" name="txtfileTitle" v-model="fileTitle" />
                        <a href="javascript:;" v-on:click="post()">Resim Yükle</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

@section ScriptsAdmin
{
    <script>
        $(document).ready(function () {

            var liste = new Vue({
                el: '#image-form',
                data: {
                    model: [],
                    fileTitle: '',
                    jsonData:'',
                },
                mounted() {
                    this.get();
                },
                methods: {
                    get: function () {
                        axios
                            .get('/Admin/File/@Model.Id.ToString()?type=1')
                            .then(response => {
                                this.model = response.data;
                                this.jsonData = JSON.stringify(this.model);
                            })
                    },
                    isDeleted: function (item) {
                        item.isDeleted = true;
                        this.jsonData = JSON.stringify(this.model);

                    },
                    isNotDeleted: function (item) {
                        item.isDeleted = false;
                        this.jsonData = JSON.stringify(this.model);

                    },
                    post: function () {
                        var formData = new FormData();
                        var imagefile = document.querySelector('#file');
                        formData.append("file", imagefile.files[0]);
                        axios.post('/Admin/File/@Model.Id.ToString()?type=1&title=' + this.fileTitle, formData, {
                            headers: {
                                'Content-Type': 'multipart/form-data'
                            }
                        }).then(response => {
                            this.model.push(response.data);
                            this.jsonData = JSON.stringify(this.model);

                        })
                    },
                }
            });

        });
    </script>

}